{"version":3,"file":"static/js/634.4bcb682e.chunk.js","mappings":"oRAGaA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8SAmBPE,EAAaF,EAAAA,GAAAA,GAAH,4C,SCuBvB,EAvCe,WAAO,IAAD,EACbG,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAE7CC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACgCC,EAAAA,EAAAA,IAAkBH,GADlD,OACQI,EADR,OAEER,EAAUQ,EAAgBC,SAF5B,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACN,IAMJ,OAAe,OAAXL,EACK,MAIP,iCACE,kBAAOY,KAAK,OAAOC,MAAOR,EAAQS,SAAU,SAACC,GAAD,OAV1BF,EAU8CE,EAAEC,OAAOH,WAT3ET,EAA0B,KAAVS,EAAe,CAAER,OAAQQ,GAAU,CAAC,GADjC,IAACA,CAU0B,KAC5C,0BACE,SAACjB,EAAD,UACGI,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC1B,EAAD,CAAS2B,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMzB,GAA7C,SAA0DsB,KADnDD,EADC,UAUrB,C","sources":["components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavItem = styled(NavLink)`\n  margin: 10px 10px;\n  padding: 3px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: blue;\n  position: relative;\n\n  &.active{\n    background-color: tomato;\n    color: white\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active){\n    color: tomato\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  list-style: none\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getMovieByKeyWord } from 'services/api';\nimport { NavItem, MoviesList} from './Movies.styled';\n\n\nconst Movies = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    async function getMovies() {\n      const moviesByKeyWord = await getMovieByKeyWord(filter);\n      setMovies(moviesByKeyWord.results);\n    }\n    getMovies();\n  }, [filter])\n\n  const changeFilter = (value) => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  }\n\n  if (movies === null) {\n    return null;\n  }\n\n  return (\n    <>\n      <input type=\"text\" value={filter} onChange={(e) => changeFilter(e.target.value)} />\n      <div>\n        <MoviesList>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <NavItem to={`/movies/${id}`} state={{ from: location }}>{title}</NavItem>\n            </li>\n          ))\n          }\n        </MoviesList>\n      </div>\n    </>\n  )\n}\n\nexport default Movies;"],"names":["NavItem","styled","NavLink","MoviesList","location","useLocation","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","filter","get","useEffect","getMovieByKeyWord","moviesByKeyWord","results","getMovies","type","value","onChange","e","target","map","id","title","to","state","from"],"sourceRoot":""}